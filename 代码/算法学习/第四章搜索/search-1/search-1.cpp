#include<bits/stdc++.h>
using namespace std;

//函数声明：
void print_subset(int n);
/*
搜索技术：
    使用的算法：BFS（队列实现）DFS（递归实现）
    两种算法衍生=>A*算法、双向广搜算法、迭代加深搜索、IDA*......
暴力搜索常见操作：
    1，找到所有可能的数据并且用数据结构表示出来（也有难度）
    2，剪枝，减少搜索的空间
    3，用某个算法检索这些数据
*/
//4.1:递归与全排列=>需要进行全排列的题目，元素应当小于11个（否则会超时）
/*
//4.2:子集生成和组合问题：
    用二进制的概念表示子集是否存在最为直观eg:
    a0 a1 a2 ;a0 a1...
    1  1  1   1  1  0...
    每一个子集对应一个二进制数这个二进制数的每一个1对应着这个子集中的某个元素
    也可以推出子集的个数为2^n（表中二进制的总个数是2^n)

*/
int main()
{
int n;
cin>>n;
print_subset(n);
cin>>n;
}
void print_subset(int n)
{
    for (int i = 0; i < (1<<n); i++)//1左移一位变成（10）即相当于2的一次方，左移n位即相当于2的n次方
    {
        for (int j = 0; j < n; j++)
        {
            if(i&(1<<j))
                cout<<j<<" ";
        }
        cout<<endl;
    }
}