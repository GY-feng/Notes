import os
import sys
dp = [(2, 1), (3, 2), (5, 4), (7, 4), (13, 10), (19, 18), (23, 15), (29, 16), (31, 27), (37, 22), (41, 1), (47, 5)]#//质数列表
lcm=187#//最小公倍数
ans=187
i=0
while i<len(dp):
    if ans%dp[i][0]==dp[i][1]:#//满足条件
        lcm*=dp[i][0]#//乘到lcm上
        i+=1#//次数+1
    else:
        ans+=lcm#//不满足就+lcm继续检验
print(ans)
'''
这段代码是一个使用中国剩余定理（CRT）来反求一个数字的例子。让我们一步步解释代码的功能：

dp 列表存储了一组形如 (质数, 余数) 的元组，代表了数字除以每个质数的余数。
lcm 存储了这些质数的最小公倍数，初始值为 187。
ans 存储了当前待求的结果，初始值也为 187。
使用 while 循环来遍历 dp 列表中的元素。
在循环中，首先检查当前的 ans 是否满足与 dp[i] 对应的质数的余数关系。如果满足，说明当前 ans 是一个合法的解，可以将该质数的值乘到 lcm 上，并继续检查下一个质数。
如果不满足，则将 ans 增加 lcm 的值，这样可以保证下一个 ans 也符合该质数的余数关系。
最终得到的 ans 即为满足所有质数余数关系的解。
这段代码的目的是为了找到一个数，使其除以给定的一组质数后余数分别与给定的余数一致。通过不断调整 ans 的值，直到满足所有的条件。
'''